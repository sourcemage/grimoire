
# HG changeset patch
# User Jed Davis <jld@mozilla.com>
# Date 1679344351 0
# Node ID 7e9a0b039a2ba0bc9c418ee10aaede4b84b15e1c
# Parent  02b47d7b0b13baf7892834a6073ecd453cd5c0db
Bug 1822728 - Increase the child process shutdown timeout for Unix ccov builds. r=ipc-reviewers,nika

Differential Revision: https://phabricator.services.mozilla.com/D172752

diff --git a/ipc/chromium/src/chrome/common/process_watcher_posix_sigchld.cc b/ipc/chromium/src/chrome/common/process_watcher_posix_sigchld.cc
--- a/ipc/chromium/src/chrome/common/process_watcher_posix_sigchld.cc
+++ b/ipc/chromium/src/chrome/common/process_watcher_posix_sigchld.cc
@@ -20,17 +20,21 @@
 
 // Maximum amount of time (in milliseconds) to wait for the process to exit.
 // XXX/cjones: fairly arbitrary, chosen to match process_watcher_win.cc
 static constexpr int kMaxWaitMs = 2000;
 
 // This is also somewhat arbitrary, but loosely based on Try results.
 // See also toolkit.asyncshutdown.crash_timeout (currently 60s) after
 // which the parent process will be killed.
-#if defined(MOZ_ASAN) || defined(MOZ_TSAN)
+#ifdef MOZ_CODE_COVERAGE
+// Code coverage instrumentation can be slow (especially when writing
+// out data, which has to take a lock on the data files).
+static constexpr int kShutdownWaitMs = 80000;
+#elif defined(MOZ_ASAN) || defined(MOZ_TSAN)
 // Sanitizers slow things down in some cases; see bug 1806224.
 static constexpr int kShutdownWaitMs = 40000;
 #else
 static constexpr int kShutdownWaitMs = 8000;
 #endif
 
 namespace {
 

