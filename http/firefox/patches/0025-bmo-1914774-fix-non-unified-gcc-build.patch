
# HG changeset patch
# User Jamie Nicol <jnicol@mozilla.com>
# Date 1730754950 0
# Node ID c3b8335e93d1828a531bb6232eeec47d8c3e28c3
# Parent  d0378618ec04083ed5fa03276a51c626ec1b7278
Bug 1914774 - Fix non-unified GCC build. r=gfx-reviewers,lsalzman

Differential Revision: https://phabricator.services.mozilla.com/D227857

diff --git a/gfx/webrender_bindings/RenderTextureHost.cpp b/gfx/webrender_bindings/RenderTextureHost.cpp
--- a/gfx/webrender_bindings/RenderTextureHost.cpp
+++ b/gfx/webrender_bindings/RenderTextureHost.cpp
@@ -3,16 +3,17 @@
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "RenderTextureHost.h"
 
 #include "GLContext.h"
 #include "mozilla/layers/CompositorThread.h"
+#include "mozilla/layers/TextureHost.h"
 #include "RenderThread.h"
 
 namespace mozilla {
 namespace wr {
 
 void ActivateBindAndTexParameteri(gl::GLContext* aGL, GLenum aActiveTexture,
                                   GLenum aBindTarget, GLuint aBindTexture) {
   aGL->fActiveTexture(aActiveTexture);
@@ -39,16 +40,21 @@ wr::WrExternalImage RenderTextureHost::L
 }
 
 wr::WrExternalImage RenderTextureHost::LockSWGL(uint8_t aChannelIndex,
                                                 void* aContext,
                                                 RenderCompositor* aCompositor) {
   return InvalidToWrExternalImage();
 }
 
+RefPtr<layers::TextureSource> RenderTextureHost::CreateTextureSource(
+    layers::TextureSourceProvider* aProvider) {
+  return nullptr;
+}
+
 void RenderTextureHost::Destroy() {
   MOZ_ASSERT_UNREACHABLE("unexpected to be called");
 }
 
 RefPtr<RenderTextureHostUsageInfo> RenderTextureHost::GetOrMergeUsageInfo(
     const MutexAutoLock& aProofOfMapLock,
     RefPtr<RenderTextureHostUsageInfo> aUsageInfo) {
   MOZ_ASSERT(layers::CompositorThreadHolder::IsInCompositorThread());
diff --git a/gfx/webrender_bindings/RenderTextureHost.h b/gfx/webrender_bindings/RenderTextureHost.h
--- a/gfx/webrender_bindings/RenderTextureHost.h
+++ b/gfx/webrender_bindings/RenderTextureHost.h
@@ -84,19 +84,17 @@ class RenderTextureHost {
   virtual void Unlock() {}
 
   virtual wr::WrExternalImage LockSWGL(uint8_t aChannelIndex, void* aContext,
                                        RenderCompositor* aCompositor);
 
   virtual void UnlockSWGL() {}
 
   virtual RefPtr<layers::TextureSource> CreateTextureSource(
-      layers::TextureSourceProvider* aProvider) {
-    return nullptr;
-  }
+      layers::TextureSourceProvider* aProvider);
 
   virtual void ClearCachedResources() {}
 
   // Called asynchronouly when corresponding TextureHost's mCompositableCount
   // becomes from 0 to 1. For now, it is used only for
   // SurfaceTextureHost/RenderAndroidSurfaceTextureHost.
   virtual void PrepareForUse() {}
   // Called asynchronouly when corresponding TextureHost's is actually going to

