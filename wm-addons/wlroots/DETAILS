# Watch: https://gitlab.freedesktop.org/wlroots/wlroots/-/tags
. "${GRIMOIRE}/FUNCTIONS"
. "${GRIMOIRE}/MESON_FUNCTIONS"
           SPELL="wlroots"
case "${WLROOTS_BRANCH}" in
(scm)
         VERSION="$(get_scm_version)"
          SOURCE="${SPELL}-git.tar.xz"
   SOURCE_URL[0]="git_http://gitlab.freedesktop.org/${SPELL}/${SPELL}.git:${SPELL}-git"
   SOURCE_IGNORE="volatile"
  FORCE_DOWNLOAD=on
;;
(hyprland)
         VERSION=0.18.0-00b869c1a96f300a
  WLROOTS_COMMIT="00b869c1a96f300a8f25da95d624524895e0ddf2"
     SOURCE_HASH="sha512:d9893f04194d813c0efc6d00bc80309e5a71672977aab46f631bf125555f00a757e08905a1e33714d1f58cec8703e44581cc6127dd22bece9a247738332794d2"
          SOURCE="${SPELL}-${WLROOTS_COMMIT}.tar.gz"
   SOURCE_URL[0]="https://gitlab.freedesktop.org/${SPELL}/${SPELL}/-/archive/${WLROOTS_COMMIT}/${SOURCE}.tar.gz"
;;
(*)
         VERSION=0.17.0
     SOURCE_HASH='sha512:ca7314d7dca3ddac3e6970476b4145a0a2566a6632054f406c6e74ea7280a805cdf9b6972cca15c3170a5f41c83677768843b648b6b98ab6428e4ecde43aa4de'
;;
esac
case "$WLROOTS_BRANCH" in
(scm|hyprland);;
(*)
          SOURCE="$SPELL-$VERSION.tar.gz"
   SOURCE_URL[0]="https://gitlab.freedesktop.org/wlroots/wlroots/-/releases/$VERSION/downloads/$SOURCE"
         SOURCE2=$SOURCE.sig
  SOURCE2_URL[0]=${SOURCE_URL[0]}.sig
      SOURCE_GPG=sway.gpg:$SOURCE.sig:UPSTREAM_KEY
  SOURCE2_IGNORE=signature
;;
esac
SOURCE_DIRECTORY="$BUILD_DIRECTORY/${SOURCE%.tar.gz}"
      LICENSE[0]="MIT"
        WEB_SITE="https://swaywm.org"
         ENTERED="20181223"
           SHORT="a modular Wayland compositor"
cat << EOF
Pluggable, composable, unopinionated modules for building a Wayland compositor;
or about 50,000 lines of code you were going to write anyway.

  * wlroots provides backends that abstract the underlying display and input
hardware, including KMS/DRM, libinput, Wayland, X11, and headless backends,
plus any custom backends you choose to write, which can all be created or
destroyed at runtime and used in concert with each other.
  * wlroots provides unopinionated, mostly standalone implementations of many
Wayland interfaces, both from wayland.xml and various protocol extensions.
We also promote the standardization of portable extensions across many
compositors.
  * wlroots provides several powerful, standalone, and optional tools that
implement components common to many compositors, such as the arrangement of
outputs in physical space.
  * wlroots provides an Xwayland abstraction that allows you to have excellent
Xwayland support without worrying about writing your own X11 window manager on
top of writing your compositor.
  * wlroots provides a renderer abstraction that simple compositors can use to
avoid writing GL code directly, but which steps out of the way when your needs
demand custom rendering code.
EOF
