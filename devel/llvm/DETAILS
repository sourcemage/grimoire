# Watch: https://github.com/llvm/llvm-project/releases /llvmorg-([0-9.]+)[.]tar
             SPELL=llvm
           VERSION=19.1.7
SPELL_BUILD_SYSTEM=cmake
        GITHUB_URI="https://github.com/llvm/llvm-project/releases/download/llvmorg-$VERSION"
  SOURCE_DIRECTORY="${BUILD_DIRECTORY}/llvm-project"
            SOURCE="${SPELL}-${VERSION}.src.tar.xz"
           SOURCE2=$SOURCE.sig
     SOURCE_URL[0]="${GITHUB_URI}/${SOURCE}"
    SOURCE2_URL[0]="${SOURCE_URL[0]}.sig"
        SOURCE_GPG=llvm.gpg:$SOURCE2:UPSTREAM_KEY
    SOURCE2_IGNORE=signature
           SOURCE3="cmake-${VERSION}.src.tar.xz"
    SOURCE3_URL[0]="${GITHUB_URI}/${SOURCE3}"
           SOURCE4="$SOURCE3.sig"
    SOURCE4_URL[0]="${SOURCE3_URL[0]}.sig"
       SOURCE3_GPG="llvm.gpg:$SOURCE4:UPSTREAM_KEY"
    SOURCE4_IGNORE=signature
if [[ "$LLVM_WITH_BOLT" == y ]]; then
           SOURCE5="bolt-${VERSION}.src.tar.xz"
    SOURCE5_URL[0]="${GITHUB_URI}/${SOURCE5}"
           SOURCE6="$SOURCE5.sig"
    SOURCE6_URL[0]="${SOURCE5_URL[0]}.sig"
       SOURCE5_GPG="llvm.gpg:$SOURCE6:UPSTREAM_KEY"
    SOURCE6_IGNORE="signature"
fi
if [[ "$LLVM_WITH_CLANG" == y ]]; then
           SOURCE7="clang-${VERSION}.src.tar.xz"
    SOURCE7_URL[0]="${GITHUB_URI}/${SOURCE7}"
           SOURCE8="$SOURCE7.sig"
    SOURCE8_URL[0]="${SOURCE7_URL[0]}.sig"
       SOURCE7_GPG="llvm.gpg:$SOURCE8:UPSTREAM_KEY"
    SOURCE8_IGNORE="signature"
           SOURCE9="clang-tools-extra-${VERSION}.src.tar.xz"
    SOURCE9_URL[0]="${GITHUB_URI}/${SOURCE9}"
          SOURCE10="$SOURCE9.sig"
   SOURCE10_URL[0]="${SOURCE9_URL[0]}.sig"
       SOURCE9_GPG="llvm.gpg:$SOURCE10:UPSTREAM_KEY"
   SOURCE10_IGNORE=signature
fi
if [[ "$LLVM_WITH_LLD" == y ]]; then
          SOURCE11="lld-${VERSION}.src.tar.xz"
   SOURCE11_URL[0]="${GITHUB_URI}/${SOURCE11}"
          SOURCE12="$SOURCE11.sig"
   SOURCE12_URL[0]="${SOURCE11_URL[0]}.sig"
      SOURCE11_GPG="llvm.gpg:$SOURCE12:UPSTREAM_KEY"
   SOURCE12_IGNORE="signature"
fi
if [[ "$LLVM_WITH_LLDB" == y ]]; then
          SOURCE13="lldb-${VERSION}.src.tar.xz"
   SOURCE13_URL[0]="${GITHUB_URI}/${SOURCE13}"
          SOURCE14="$SOURCE13.sig"
   SOURCE14_URL[0]="${SOURCE13_URL[0]}.sig"
      SOURCE13_GPG="llvm.gpg:$SOURCE14:UPSTREAM_KEY"
   SOURCE14_IGNORE="signature"
fi
if [[ "$LLVM_WITH_MLIR" == y ]]; then
          SOURCE15="mlir-${VERSION}.src.tar.xz"
   SOURCE15_URL[0]="${GITHUB_URI}/${SOURCE15}"
          SOURCE16="$SOURCE15.sig"
   SOURCE16_URL[0]="${SOURCE15_URL[0]}.sig"
      SOURCE15_GPG="llvm.gpg:$SOURCE16:UPSTREAM_KEY"
   SOURCE16_IGNORE="signature"
fi
if [[ "$LLVM_WITH_POLLY" == y ]]; then
          SOURCE17="polly-${VERSION}.src.tar.xz"
   SOURCE17_URL[0]="${GITHUB_URI}/${SOURCE17}"
          SOURCE18="$SOURCE17.sig"
   SOURCE18_URL[0]="${SOURCE17_URL[0]}.sig"
      SOURCE17_GPG="llvm.gpg:$SOURCE18:UPSTREAM_KEY"
   SOURCE18_IGNORE="signature"
fi
if [[ -n "$LLVM_RUNTIMES" ]] ;then
           SOURCE19="runtimes-${VERSION}.src.tar.xz"
    SOURCE19_URL[0]="${GITHUB_URI}/${SOURCE19}"
           SOURCE20="$SOURCE19.sig"
    SOURCE20_URL[0]="${SOURCE19_URL[0]}.sig"
       SOURCE19_GPG="llvm.gpg:$SOURCE20:UPSTREAM_KEY"
    SOURCE20_IGNORE="signature"
fi
if list_find "$LLVM_RUNTIMES" "compiler-rt" ;then
           SOURCE21="compiler-rt-${VERSION}.src.tar.xz"
    SOURCE21_URL[0]="${GITHUB_URI}/${SOURCE21}"
           SOURCE22="$SOURCE21.sig"
    SOURCE22_URL[0]="${SOURCE21_URL[0]}.sig"
       SOURCE21_GPG="llvm.gpg:$SOURCE22:UPSTREAM_KEY"
    SOURCE22_IGNORE="signature"
fi
if list_find "$LLVM_RUNTIMES" "libcxx" ;then
          SOURCE23="libcxx-${VERSION}.src.tar.xz"
   SOURCE23_URL[0]="${GITHUB_URI}/${SOURCE23}"
          SOURCE24="$SOURCE23.sig"
   SOURCE24_URL[0]="${SOURCE23_URL[0]}.sig"
      SOURCE23_GPG="llvm.gpg:$SOURCE24:UPSTREAM_KEY"
   SOURCE24_IGNORE="signature"
fi
if list_find "$LLVM_RUNTIMES" "libcxxabi" ;then
          SOURCE25="libcxxabi-${VERSION}.src.tar.xz"
   SOURCE25_URL[0]="${GITHUB_URI}/${SOURCE25}"
          SOURCE26="$SOURCE25.sig"
   SOURCE26_URL[0]="${SOURCE25_URL[0]}.sig"
      SOURCE25_GPG="llvm.gpg:$SOURCE26:UPSTREAM_KEY"
   SOURCE26_IGNORE="signature"
fi
if list_find "$LLVM_RUNTIMES" "libunwind" ;then
          SOURCE27="libunwind-${VERSION}.src.tar.xz"
   SOURCE27_URL[0]="${GITHUB_URI}/${SOURCE27}"
          SOURCE28="$SOURCE27.sig"
   SOURCE28_URL[0]="${SOURCE27_URL[0]}.sig"
      SOURCE27_GPG="llvm.gpg:$SOURCE28:UPSTREAM_KEY"
   SOURCE28_IGNORE="signature"
fi
if list_find "$LLVM_RUNTIMES" "openmp" ;then
          SOURCE29="openmp-${VERSION}.src.tar.xz"
   SOURCE29_URL[0]="${GITHUB_URI}/${SOURCE29}"
          SOURCE30="$SOURCE29.sig"
   SOURCE30_URL[0]="${SOURCE29_URL[0]}.sig"
      SOURCE29_GPG="llvm.gpg:$SOURCE30:UPSTREAM_KEY"
   SOURCE30_IGNORE="signature"
fi
          WEB_SITE="https://llvm.org"
        LICENSE[0]=APACHE
           ENTERED=20081115
             SHORT="A novel compiler infrastructure for the optimization of programs."
             TMPFS=off # Well, needs about 5G space, plus actual RAM for compiling.
    STAGED_INSTALL=off # chmod issues with castfs
cat << EOF
The LLVM Project is a collection of modular and reusable compiler and toolchain
technologies. Despite its name, LLVM has little to do with traditional virtual
machines. The name "LLVM" itself is not an acronym; it is the full name of the
project.

LLVM began as a research project at the University of Illinois, with the goal
of providing a modern, SSA-based compilation strategy capable of supporting
both static and dynamic compilation of arbitrary programming languages. Since
then, LLVM has grown to be an umbrella project consisting of a number of
subprojects, many of which are being used in production by a wide variety of
commercial and open source projects as well as being widely used in academic
research.
EOF
