. $GRIMOIRE/config_query_multi.function  &&

LLVM_ALL_RUNTIMES="all" &&
LLVM_ALL_RUNTIMES="$LLVM_ALL_RUNTIMES compiler-rt" &&
LLVM_ALL_RUNTIMES="$LLVM_ALL_RUNTIMES libcxx" &&
LLVM_ALL_RUNTIMES="$LLVM_ALL_RUNTIMES libcxxabi" &&
LLVM_ALL_RUNTIMES="$LLVM_ALL_RUNTIMES libunwind" &&
LLVM_ALL_RUNTIMES="$LLVM_ALL_RUNTIMES openmp" &&

config_query_multi LLVM_RUNTIMES "which runtime library targets?" \
                   $LLVM_ALL_RUNTIMES &&

# selecting "all" runtimes in the LLVM build system will only enable libcxx,
# libcxxabi, and libunwind, instead of actually all possible supported
# runtimes, so specify them manually
if list_find "$LLVM_RUNTIMES" "all" ;then
  LLVM_RUNTIMES="${LLVM_ALL_RUNTIMES#all }"
fi &&


local compilers=""
for compiler in clang gcc ;do
  if command -v "$compiler" > /dev/null;then
    compilers="$compilers $compiler"
  fi
done

local linkers="default "
for linker in bfd gold lld mold ;do
  if command -v "ld.$linker" > /dev/null;then
    linkers="$linkers $linker"
  fi
done

config_query_list LLVM_TOOLCHAIN_COMPILER \
                  "Which compiler to use to build llvm and its components?" \
                  $compilers &&

config_query_list LLVM_TOOLCHAIN_LINKER \
                  "Which linker to use to link llvm and its components?" \
                  $linkers &&

case "$LLVM_TOOLCHAIN_LINKER" in
  default)
    LLVM_TOOLCHAIN_LINKER="SYSTEM"
    persistent_add LLVM_TOOLCHAIN_LINKER
    ;;
esac

config_query LLVM_WITH_RTTI     "Enable RTTI? (recommended)" y &&
config_query LLVM_WITH_UTILS    "Build the LLVM utilities?" y &&
config_query LLVM_WITH_BOLT     "Build BOLT?" n &&
config_query LLVM_WITH_CLANG    "Build the clang compiler frontend? (selects compiler-rt runtime)" n &&
config_query LLVM_WITH_LLDB     "Build the LLDB debugger (selects libcxx and libcxxabi runtimes)?" n &&
config_query LLVM_WITH_POLLY    "Build the polyhedral optimizer (polly)?" n &&
config_query LLVM_WITH_LLD      "Build the LLVM linker (lld)?" n &&
config_query LLVM_WITH_MLIR     "Build the LLVM multi-level intermediate representation (MLIR)?" n &&

if [[ "$LLVM_WITH_CLANG" == y ]] ;then
  for required in compiler-rt ;do
    if ! list_find "$LLVM_RUNTIMES" "$required";then
      LLVM_RUNTIMES="$LLVM_RUNTIMES $required"
    fi
  done
fi &&

if [[ "$LLVM_WITH_LLD" == y ]] ;then
  for required in libcxx libcxxabi libunwind ;do
    if ! list_find "$LLVM_RUNTIMES" "$required";then
      LLVM_RUNTIMES="$LLVM_RUNTIMES $required"
    fi
  done
fi &&

persistent_add LLVM_RUNTIMES
