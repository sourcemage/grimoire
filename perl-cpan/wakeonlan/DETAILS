# Watch: https://github.com/jpoliv/wakeonlan//tags /refs/tags/v([0-9.]+)[.]tar
           SPELL=wakeonlan
         VERSION=0.42
          SOURCE=$SPELL-$VERSION.tar.gz
      SOURCE_URL=https://github.com/jpoliv/wakeonlan/archive/v$VERSION.tar.gz
     SOURCE_HASH=sha512:46ecc7106eefa0b993f0f59eb4e4a593fac7831dffee87c743a7bd757abf366258e99e1efc6742fb3992ee066cb4e280787d0bf3d2db7fb4c88be7c09452da81
SOURCE_DIRECTORY=$BUILD_DIRECTORY/$SPELL-$VERSION
        WEB_SITE=https://github.com/jpoliv/wakeonlan
         ENTERED=20080525
         LICENSE=ART
        KEYWORDS="perl"
           SHORT="Wakeonlan is a Perl script that sends 'magic packets' to wake-on-LAN enabled ethernet adapters and motherboards, in order to switch on remote computers."
cat << EOF
WOL is based on the following principle:

When the PC shuts down, the NIC still gets power, and keeps listening on
the network for a 'magic' packet to arrive. This packet must contain a
certain byte-sequence, but can be encapsulated in any kind of packet (IPX,
IP, anything). Take a look at the code for the magic sequence.

This program uses UDP for sending the packet. The complete UDP packet,
sent over an ethernet interface, looks something like this:

[ethernet header][IP header][UDP header][Magic sequence][CRCS]

The only goal of the script is to send this packet over the network. It expects
no returning data, since the NIC only listens, and does not reply anything.
EOF
