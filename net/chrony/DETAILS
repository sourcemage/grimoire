           SPELL=chrony
         VERSION=4.4
  SECURITY_PATCH=6
          SOURCE=$SPELL-$VERSION.tar.gz
         SOURCE2=$SPELL-$VERSION-tar-gz-asc.txt
   SOURCE_URL[0]=https://download.tuxfamily.org/$SPELL/$SOURCE
  SOURCE2_URL[0]=https://download.tuxfamily.org/$SPELL/$SOURCE2
      SOURCE_GPG=chrony.gpg:$SOURCE2:UPSTREAM_KEY
  SOURCE2_IGNORE=signature
SOURCE_DIRECTORY="$BUILD_DIRECTORY/$SPELL-$VERSION"
        WEB_SITE=https://chrony.tuxfamily.org/
         ENTERED=20021216
      LICENSE[0]=GPL
        KEYWORDS="net"
           SHORT="daemon for maintaining the accuracy of computer clocks"
cat << EOF
Chrony can be used to keep your computer clock in step with the true time
(actually UTC), and/or to keep a network of computers in time with one another.

To keep in step with true time, your computer has to have a reference to
look at.
This could be one of the following:

* Network time protocol (NTP) server.
  The Internet contains a large number of NTP servers which themselves are
  referenced to UTC (via other servers or directly connected hardware clocks).
  If you can find and get access to one or more NTP servers you will be able to
  configure Chronyd to synchronise your computer with them. Chronyd can
  also act
  as an NTP server in its own right.

* Your wristwatch.
  If all else fails, you can periodically use chronyc to tell chronyd the true
  time, by typing it into your keyboard and pressing Return at the correct
  epoch.
  chronyd will work out the average rate at which your computer clock loses or
  gains time, and compensate accordingly the rest of the time.

  Obviously, the accuracy of this method is rather limited, but it can be
  used if
  you have an isolated network of computers where the primary requirement is to
  keep the computers synchronised together, with only a secondary requirement
  to
  have them report the true time of day.

* Hardware reference clock.
  You might have a GPS receiver or radio clock receiver connected to your
  computer. Chrony has limited support for some of these.

* Your system’s real-time clock.
  For all recent versions of Linux, there is support for using the systems
  real-time clock (RTC) (the one that maintains the time when the system is
  turned off) at boot time to restart Chronyd with a good estimate of the true
  time. This is done by working out how much time the RTC gains or loses over a
  certain period, and using this information to correct the RTC reading at the
  next boot. This is useful for machines that are only powered up while
  they are
  being used.

  The other major feature is if you have an intermittent (e.g. dial-up)
  connection to the network where your NTP servers are. Chronyd has been
  specifically written to work well in this case, and it still works well in a
  “permanently connected” mode.
EOF
