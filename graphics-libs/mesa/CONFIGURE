. "${GRIMOIRE}/config_query_multi.function" &&
. "${GRIMOIRE}/MESON_CONFIGURE" &&

sort_list() {
  printf '%s\n' "$@" | sort -fu
}

config_query_multi MESA_PLATFORMS "Which window systems to support?" \
                   auto \
                   wayland \
                   x11 \
                   &&

config_query_multi MESA_ARCH "Which hardware platforms to support?" \
                   ARM \
                   x86 \
                   &&

local vendors="VMware" &&
if list_find "$MESA_ARCH" x86 ;then
  vendors="$vendors AMD Intel Nvidia Microsoft-WSL"
fi &&
if list_find "$MESA_ARCH" ARM ;then
  vendors="$vendors Freedreno Imagination Mali Nvidia RaspberryPi"
fi &&
vendors="${vendors## }" &&
vendors="${vendors%% }" &&

config_query_multi MESA_HW "Which graphics vendor hardware to support?" \
                   $(sort_list $vendors) \
                   &&

for vendor in "$MESA_HW" ;do
  case "$vendor" in
    AMD) drivers="$drivers amdgpu radeon" ;;
    Imagination) drivers="$drivers etnaviv" ;;
    Mali) drivers="$drivers lima panfrost" ;;
    Qualcomm) drivers="$drivers freedreno" ;;
    Intel) drivers="$drivers intel" ;;
    Nvidia)
      if list_find "$MESA_ARCH" x86 ;then
        drivers="$drivers nouveau"
      fi &&
      if list_find "$MESA_ARCH" ARM ;then
        drivers="$drivers tegra"
      fi
      ;;
    RaspberryPi) drivers="$drivers rpi" ;;
    Microsoft-WSL) drivers="$drivers WSL" ;;
    VMware) drivers="$drivers vmware-mks-stats" ;;
  esac
done &&

drivers="${drivers# }" &&
drivers="${drivers% }" &&
case "$drivers" in
  *" "*)
    config_query_multi MESA_DRIVERS "Which drivers to support?" \
                       all \
                       $(sort_list $drivers)
    ;;
  *)
    MESA_DRIVERS="$drivers"
    ;;
esac &&

if list_find "$MESA_DRIVERS" etnaviv || list_find "$MESA_DRIVERS" WSL ;then
  config_query MESA_VULKAN_EXPERIMENTAL "Enable experimental vulkan drivers?"
fi &&

# only suggest drivers for specified hardware
local AVAILABLE_GALLIUM="llvmpipe softpipe svga virgl zink" &&
local AVAILABLE_VULKAN="swrast virtio" &&
local AVAILABLE_TOOLS="dlclose-skip drm-shim glsl nir" &&

if list_find "$MESA_DRIVERS" amdgpu;then
  MESA_DRM="$MESA_DRM AMD" &&
  AVAILABLE_VULKAN="$AVAILABLE_VULKAN amd" &&
  config_query MESA_AMD_LLVM "Use LLVM for the AMD drivers?" y
fi &&

if list_find "$MESA_DRIVERS" radeon;then
  MESA_DRM="$MESA_DRM RADEON" &&
  AVAILABLE_GALLIUM="$AVAILABLE_GALLIUM r300 r600 radeonsi"
fi &&

if list_find "$MESA_DRIVERS" intel;then
  MESA_DRM="$MESA_DRM INTEL" &&
  AVAILABLE_GALLIUM="$AVAILABLE_GALLIUM i915 iris crocus" &&
  AVAILABLE_VULKAN="$AVAILABLE_VULKAN intel intel_hasvk" &&
  AVAILABLE_TOOLS="$AVAILABLE_TOOLS intel intel-ui"
fi &&

if list_find "$MESA_DRIVERS" etnaviv;then
  MESA_DRM="$MESA_DRM ETNAVIV" &&
  AVAILABLE_GALLIUM="$AVAILABLE_GALLIUM etnaviv" &&
  AVAILABLE_VULKAN="$AVAILABLE_VULKAN etnaviv" &&
  AVAILABLE_TOOLS="$AVAILABLE_TOOLS etnaviv"
fi &&

if list_find "$MESA_DRIVERS" freedreno;then
  MESA_DRM="$MESA_DRM FREEDRENO" &&
  AVAILABLE_GALLIUM="$AVAILABLE_GALLIUM freedreno" &&
  AVAILABLE_VULKAN="$AVAILABLE_VULKAN freedreno" &&
  AVAILABLE_TOOLS="$AVAILABLE_TOOLS freedreno"
fi &&

if list_find "$MESA_DRIVERS" lima;then
  AVAILABLE_GALLIUM="$AVAILABLE_GALLIUM lima" &&
  AVAILABLE_TOOLS="$AVAILABLE_TOOLS lima"
fi &&

if list_find "$MESA_DRIVERS" nouveau;then
  MESA_DRM="$MESA_DRM NOUVEAU" &&
  AVAILABLE_GALLIUM="$AVAILABLE_GALLIUM nouveau" &&
  AVAILABLE_VULKAN="$AVAILABLE_VULKAN nouveau" &&
  AVAILABLE_TOOLS="$AVAILABLE_TOOLS nouveau"
fi &&

if list_find "$MESA_DRIVERS" panfrost;then
  AVAILABLE_GALLIUM="$AVAILABLE_GALLIUM panfrost" &&
  AVAILABLE_VULKAN="$AVAILABLE_VULKAN panfrost" &&
  AVAILABLE_TOOLS="$AVAILABLE_TOOLS panfrost"
fi &&

if list_find "$MESA_DRIVERS" rpi;then
  MESA_DRM="$MESA_DRM VC4" &&
  AVAILABLE_GALLIUM="$AVAILABLE_GALLIUM v3d vc4" &&
  AVAILABLE_VULKAN="$AVAILABLE_VULKAN broadcom" &&
  AVAILABLE_TOOLS="$AVAILABLE_TOOLS freedreno"
fi &&

if list_find "$MESA_DRIVERS" tegra;then
  MESA_DRM="$MESA_DRM TEGRA" &&
  AVAILABLE_GALLIUM="$AVAILABLE_GALLIUM tegra"
fi &&

if list_find "$MESA_DRIVERS" vmware;then
  MESA_DRM="$MESA_DRM vmwgfx" &&
  AVAILABLE_GALLIUM="$AVAILABLE_GALLIUM vmware"
fi &&

if list_find "$MESA_DRIVERS" WSL;then
  AVAILABLE_GALLIUM="$AVAILABLE_GALLIUM d3d12" &&
  if [[ "$MESA_VULKAN_EXPERIMENTAL" == "y" ]] ;then
    AVAILABLE_VULKAN="$AVAILABLE_VULKAN microsoft-experimental"
  fi
fi &&

config_query_multi MESA_GALLIUM "Which gallium (accelerated) drivers to build?" \
                   none \
                   all \
                   auto \
                   $(sort_list $AVAILABLE_GALLIUM) \
                   &&

if [ -n "$MESA_GALLIUM" ] &&  ! list_find "$MESA_GALLIUM" none ;then
  config_query MESA_GALLIUM_HUD "Enable HUD block/NIC I/O HUD status support?" n &&

  local allow_xa
  # XA state tracker requires one of the following gallium drivers
  for driver in nouveau freedreno i915 svga ;do
    if list_find "$MESA_GALLIUM" $driver ;then
      allow_xa="y"
    fi
  done &&

  if [[ "$allow_xa" == "y" ]] ;then
    config_query MESA_GALLIUM_XA "Build gallium XA frontend?" n
  fi &&

  if list_find "$MESA_GALLIUM" vmware ;then
    if ! list_find "$MESA_GALLIUM" svga ;then
      message "The vmware driver requires gallium svga; adding gallium svga." &&
      MESA_GALLIUM="$MESA_GALLIUM svga"
    fi
  fi &&

  if list_find "$MESA_GALLIUM" llvmpipe || list_find "$MESA_GALLIUM" softpipe ;then
    config_query MESA_GALLIUM_D3D9 "Build gallium Direct3D9 (nine) frontend?" n &&
    if list_find "$MESA_DRIVERS" WSL ;then
      config_query MESA_GALLIUM_D3D10 "Build gallium Direct3D10 (WDDM UMD) frontend?" n
    fi
  fi &&

  if list_find "$MESA_GALLIUM" d3d12 ;then
    config_query MESA_GALLIUM_D3D12_PIPELINE "Build gallium with Direct3D12 graphics pipeline support?" n &&
    config_query MESA_GALLIUM_D3D12_VIDEO "Build gallium with Direct3D12 video support?" n
  fi &&

  config_query MESA_OPENCL_ENABLE "Build gallium OpenCL (clover) frontend?" n &&

  if [[ "$MESA_OPENCL_ENABLE" == "y" ]] ;then
    config_query_list MESA_OPENCL "How should the gallium OpenCL (clover) frontend be built?" \
                      icd \
                      standalone \
                      &&

    if [[ "${MESA_BRANCH}" != "scm" ]]; then
      config_query MESA_OPENCL_SPIRV "Enable SPIR-V support in OpenCL (clover) frontend?" n
    fi
  fi &&

  config_query MESA_RUSTICL "Build gallium rusticl (OpenCL) frontend (requires rust)?" n &&

  if [[ "$MESA_RUSTICL" == "y" ]] ;then
    config_query_multi MESA_RUSTICL_DRIVERS "Which drivers to enable with rusticl by default?" \
                       auto \
                       asahi
  fi
fi &&

config_query_multi MESA_VULKAN "Which Vulkan drivers to build?" \
                   none \
                   all \
                   auto \
                   $(sort_list $AVAILABLE_VULKAN) \
                   &&

if [ -n "$MESA_VULKAN" ] && ! list_find "$MESA_VULKAN" none ;then
  config_query_multi MESA_VULKAN_LAYERS "Which Vulkan layers to build?" \
                     none \
                     device-select \
                     intel-nullhw \
                     overlay \
                     screenshot \
                     &&

  config_query MESA_XLIB_LEASE "Enable VK_EXT_acquire_xlib_display?" n
fi &&

config_query MESA_SHADER_CACHE "Support on-disk shader caching?" n &&

# EGL requires DRI, which is only enabled if gallium is enabled
if ! list_find "$MESA_GALLIUM" none ;then
  # Walyand requires EGL support
  if list_find "$MESA_PLATFORMS" wayland || (list_find "$MESA_PLATFORMS" auto && spell_ok wayland) ;then
    MESA_EGL=y &&
    persistent_add MESA_EGL
  else
    config_query MESA_EGL "Enable EGL platform support?" n
  fi &&

  if [[ "$MESA_EGL" == "y" ]] ;then
    local egldefaults="drm surfaceless" &&
    if list_find "$MESA_PLATFORMS" x11 ;then
      egldefaults="$egldefaults x11"
    fi &&
    if list_find "$MESA_PLATFORMS" wayland ;then
      egldefaults="$egldefaults wayland"
    fi &&
    if list_find "$MESA_PLATFORMS" WSL ;then
      egldefaults="$egldefaults windows"
    fi &&
    config_query_list MESA_EGL_DEFAULT "Which window system should EGL assume for EGL_DEFAULT_DISPLAY" \
                      auto \
                      $(sort_list $egldefaults)
  fi
fi &&

config_query MESA_GLES1 "Support OpenGL ES 1.x?" n &&
config_query MESA_GLES23 "Support OpenGL ES 2.x and 3.x?" n &&
config_query MESA_OPENGL "Enable desktop OpenGL support?" y &&
config_query MESA_GBM "Enable generic buffer management (GBM) support?" n &&
config_query MESA_OSMESA "Build OSmesa to support off-screen rendering?" n &&

config_query_list MESA_GLX "Which GLX build type (auto or dri recommended)?" \
                  auto \
                  disabled \
                  dri \
                  xlib \
                  &&

if list_find "${MESA_GLX}" "disabled"; then
  MESA_GLX="disabled"
else
  config_query MESA_GLX_DIRECT "Enable direct rendering in GLX and EGL for DRI?" y &&
  config_query MESA_GLX_READONLY "Read-only GLX (disable writable .text section) on x86 (decreases performance)?" n
fi &&

if [[ "$MESA_EGL" == "y" ]] || ! list_find "$MESA_GLX" disabled ;then
  config_query MESA_GLVND "Enable OpenGL vendor-neutral dispatch (GLVND) support?" n
fi &&

config_query MESA_SPIRV_DXIL "Build support for the SPIR-V to DXIL library?" n &&

config_query_multi MESA_TOOLS  "Which tools to build?" \
                   none \
                   all \
                   $(sort_list $AVAILABLE_TOOLS) \
                   &&

local perfetto_sources=""
if list_find "$MESA_DRIVERS" freedreno ;then
  perfetto_sources="$perfetto_sources intel"
fi &&
if list_find "$MESA_DRIVERS" intel ;then
  perfetto_sources="$perfetto_sources intel"
fi &&
if list_find "$MESA_DRIVERS" panfrost ;then
  perfetto_sources="$perfetto_sources intel"
fi &&
if [ -n "$perfetto_sources" ] ;then
  config_query MESA_PERFETTO "Enable performance analysis with Perfetto" n &&
  if [[ "$MESA_PERFETTO" == "y" ]] ;then
    config_query_multi MESA_PERFETTO_SOURCES "Perfetto datasources to build" \
                       auto \
                       $(sort_list $perfetto_sources)
  fi
fi &&

config_query MESA_TEFLON "Enable TensorFlow Lite delegate" n &&
config_query MESA_GPUVIS "Enable tracing markers for gpuvis" n &&

if list_find "$MESA_VULKAN" intel || list_find "$MESA_VULKAN" intel_hasvk ;then
  config_query MESA_INTEL_RT "Build Intel raytracing support (on supported hardware)?" n
fi &&

config_query_multi MESA_VIDEO_CODECS "Which codecs to build?" \
                   none \
                   all \
                   all_free \
                   av1dec \
                   av1enc \
                   h264dec \
                   h264enc \
                   h265dec \
                   h265enc \
                   vc1dec \
                   vp9dec \
                   &&

config_query MESA_XMLCONFIG "Enable custom xmlconfig (driconf) support (requires expat)?" n &&

# strip any leading or trailing spaces from the driver lists
MESA_DRM="$(echo "$MESA_DRM" | sed 's,\s\+, ,g')" &&
MESA_DRM="${MESA_DRM# }" &&
MESA_DRM="${MESA_DRM% }" &&
MESA_GALLIUM="$(echo "$MESA_GALLIUM" | sed 's,\s\+, ,g')" &&
MESA_GALLIUM="${MESA_GALLIUM# }" &&
MESA_GALLIUM="${MESA_GALLIUM% }" &&
MESA_VULKAN="$(echo "$MESA_VULKAN" | sed 's,\s\+, ,g')" &&
MESA_VULKAN="${MESA_VULKAN# }" &&
MESA_VULKAN="${MESA_VULKAN% }" &&

persistent_add MESA_DRM &&
persistent_add MESA_DIVERS &&
persistent_add MESA_GALLIUM &&
persistent_add MESA_GLX &&
persistent_add MESA_VULKAN
