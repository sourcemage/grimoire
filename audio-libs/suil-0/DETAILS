source $GRIMOIRE/MESON_FUNCTIONS
# Trying to deal with multi-version install of library, as asked by upstream.
           SPELL=suil-0
         VERSION=0.10.18
          SOURCE="${SPELL%-*}-${VERSION}.tar.xz"
      SOURCE_URL=https://download.drobilla.net/${SOURCE}
# Download $SOURCE_URL.sig and verify using dave_robillard.gpg, then hash.
     SOURCE_HASH=sha512:2c4630ef37f13c0e344eadfc8fdcfe70538abdabad1ad0865c43f9f5947fdbc3bdf56bb90e7a58f20d3e641ab9b7a7a670799920aca04374d7c992c52b93f8f3
SOURCE_DIRECTORY="${BUILD_DIRECTORY}/${SPELL%-*}-${VERSION}"
        WEB_SITE="https://drobilla.net/software/suil.html"
      LICENSE[0]="ISC"
        KEYWORDS=""
           SHORT="lightweight C library for loading and wrapping LV2 plugin UIs"
cat << EOF
Suil makes it possible to load a UI of any toolkit in a host using any other toolkit (assuming the toolkits are both supported by Suil). Hosts do not need to build against or link to foreign toolkit libraries to use UIs written with that toolkit; all the necessary magic is performed by dynamically loaded modules. The API is designed such that hosts do not need to explicitly support specific toolkits at all – if Suil supports a particular toolkit, then UIs in that toolkit will work in all hosts that use Suil automatically.

Suil currently supports every combination of Gtk 2, Qt 4, and X11, e.g. with Suil a Gtk program can embed a Qt plugin UI without depending on Qt, and a Qt program can embed a Gtk plugin UI without depending on Gtk. On Windows, embedding native UIs in Gtk is also supported. I (David Robillard) would be happy to work with plugin authors to add support for new toolkits, please contact me if you’re interested in writing a plugin UI using a toolkit that is not yet supported in the LV2 ecosystem.
EOF
