. "$GRIMOIRE/FUNCTIONS"
# Watch: https://ftp.gnu.org/gnu/glibc/
           SPELL=glibc
           TMPFS=off
  if [[ "${GLIBC_BRANCH}" == "scm" ]]; then
         VERSION=$(get_scm_version)
  FORCE_DOWNLOAD=on
          SOURCE=$SPELL-git.tar.bz2
SOURCE_DIRECTORY=$BUILD_DIRECTORY/$SPELL-git
      SOURCE_URL="git://sourceware.org/git/glibc.git:$SPELL-git"
   SOURCE_IGNORE=volatile
  else
         VERSION=2.39
  SECURITY_PATCH=23
          SOURCE=$SPELL-$VERSION.tar.xz
SOURCE_DIRECTORY=$BUILD_DIRECTORY/$SPELL-$VERSION
         SOURCE2=$SOURCE.sig
   SOURCE_URL[0]=$GNU_URL/$SPELL/$SOURCE
  SOURCE2_URL[0]=${SOURCE_URL[0]}.sig
      SOURCE_GPG=glibc.gpg:$SOURCE.sig:UPSTREAM_KEY
  SOURCE2_IGNORE=signature
  fi
  if [[ $GLIBC_SANITIZE_HEADERS == n ]]; then
 HEADERS_VERSION=6.8.7
 HEADERS_MAJOR_VERSION=$(echo $HEADERS_VERSION|cut -f1 -d.)
         SOURCE3=linux-${HEADERS_VERSION}.tar.xz
         SOURCE6=linux-${HEADERS_VERSION}.tar.sign
  SOURCE6_IGNORE=signature
     SOURCE3_GPG="kernel.gpg:${SOURCE6}:ESTABLISHED_UPSTREAM_KEY"
  SOURCE3_URL[0]="$KERNEL_URL/pub/linux/kernel/v${HEADERS_MAJOR_VERSION}.x/$SOURCE3"
  SOURCE6_URL[0]="$KERNEL_URL/pub/linux/kernel/v${HEADERS_MAJOR_VERSION}.x/$SOURCE6"
  else
    local LINUX_DIRECTORY
 LINUX_DIRECTORY=$(gaze -q where -path linux)
    . $LINUX_DIRECTORY/latest.defaults

    case $(uname -r) in
       4.*)
 HEADERS_VERSION=$(echo $LATEST_maintenance_patches_4 | sed "s/patch-//")
 HEADERS_VERSION=${HEADERS_VERSION:-$LATEST_4}
         SOURCE3=linux-${LATEST_4}.tar.xz
         SOURCE6="linux-${LATEST_4}.tar.sign"
    HEADERS_VDIR=v4.x
      if [[ ${HEADERS_VERSION} != $LATEST_4 ]]; then
         SOURCE7=patch-${HEADERS_VERSION}.xz
         if [[ ${HEADERS_VERSION} > 4.17.9 ]]; then
           . "${LINUX_DIRECTORY}/info/patches/maintenance_patches_4/${LATEST_maintenance_patches_4}"
           SOURCE7_HASH="sha1:${sha1sum}"
         else
           SOURCE8="patch-${HEADERS_VERSION}.sign"
         fi
      fi
         ;;
       5.*)
 HEADERS_VERSION=$(echo $LATEST_maintenance_patches_5 | sed "s/patch-//")
 HEADERS_VERSION=${HEADERS_VERSION:-$LATEST_5}
         SOURCE3=linux-${LATEST_5}.tar.xz
         SOURCE6="linux-${LATEST_5}.tar.sign"
    HEADERS_VDIR=v5.x
      if [[ ${HEADERS_VERSION} != $LATEST_5 ]]; then
        . "${LINUX_DIRECTORY}/info/patches/maintenance_patches_5/${LATEST_maintenance_patches_5}"
        SOURCE7=patch-${HEADERS_VERSION}.xz
        SOURCE7_HASH="sha512:${sha512sum}"
      fi
         ;;
       6.*)
 HEADERS_VERSION=$(echo $LATEST_maintenance_patches_6 | sed "s/patch-//")
 HEADERS_VERSION=${HEADERS_VERSION:-$LATEST_6}
         SOURCE3=linux-${LATEST_6}.tar.xz
         SOURCE6="linux-${LATEST_6}.tar.sign"
    HEADERS_VDIR=v6.x
      if [[ ${HEADERS_VERSION} != $LATEST_6 ]]; then
        . "${LINUX_DIRECTORY}/info/patches/maintenance_patches_6/${LATEST_maintenance_patches_6}"
        SOURCE7=patch-${HEADERS_VERSION}.xz
        SOURCE7_HASH="sha512:${sha512sum}"
      fi
    esac

     SOURCE3_GPG="kernel.gpg:${SOURCE6}:ESTABLISHED_UPSTREAM_KEY"
     SOURCE3_URL="${KERNEL_URL}/pub/linux/kernel/$HEADERS_VDIR/${SOURCE3}"
  SOURCE6_IGNORE=signature
     SOURCE6_URL="${KERNEL_URL}/pub/linux/kernel/$HEADERS_VDIR/${SOURCE6}"

    if [[ -n $SOURCE7 ]]; then
     SOURCE7_URL="${KERNEL_URL}/pub/linux/kernel/$HEADERS_VDIR/${SOURCE7}"
      if [[ -n $SOURCE8 ]]; then
        SOURCE7_GPG="kernel.gpg:${SOURCE8}:ESTABLISHED_UPSTREAM_KEY"
        SOURCE8_IGNORE=signature
        SOURCE8_URL="${KERNEL_URL}/pub/linux/kernel/$HEADERS_VDIR/${SOURCE8}"
      fi
    fi
  fi
        WEB_SITE=http://www.gnu.org/software/libc
      LICENSE[0]=LGPL
      LICENSE[1]=LGPL
      LICENSE[2]=GPL
  STAGED_INSTALL=off
         ENTERED=20010922
        KEYWORDS="libs"
           SHORT="C library for use with GNU/Hurd and GNU/Linux"
cat << EOF
glibc - Library for use with GNU/Hurd and GNU/Linux.
GNU C Library is one of the most important components of the GNU Hurd
and most modern Linux distributions. It is used by almost all C programs
and provides the most essential program interface.
EOF
