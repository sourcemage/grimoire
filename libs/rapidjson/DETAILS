# Watch: https://github.com/Tencent/rapidjson/tags /refs/tags/v([0-9.]+)[.]tar
source "${GRIMOIRE}/CMAKE_FUNCTIONS"
           SPELL="rapidjson"
         VERSION="1.1.0"
     SOURCE_HASH="sha512:2e82a4bddcd6c4669541f5945c2d240fb1b4fdd6e239200246d3dd50ce98733f0a4f6d3daa56f865d8c88779c036099c52a9ae85d47ad263686b68a88d832dff"
          SOURCE="${SPELL}-${VERSION}.tar.gz"
   SOURCE_URL[0]="https://github.com/Tencent/${SPELL}/archive/v${VERSION}.tar.gz"
SOURCE_DIRECTORY="${BUILD_DIRECTORY}/${SPELL}-${VERSION}"
        WEB_SITE="http://rapidjson.org/"
         ENTERED="20190114"
      LICENSE[0]="BSD"
        KEYWORDS=""
           SHORT="a fast JSON parser/generator for C++ with both SAX/DOM style API"
cat << EOF
RapidJSON is a JSON parser and generator for C++. It was inspired by RapidXml.

  * RapidJSON is small but complete. It supports both SAX and DOM style API.
The SAX parser is only a half thousand lines of code.

  * RapidJSON is fast. Its performance can be comparable to strlen(). It also
optionally supports SSE2/SSE4.2 for acceleration.

  * RapidJSON is self-contained and header-only. It does not depend on external
libraries such as BOOST. It even does not depend on STL.

  * RapidJSON is memory-friendly. Each JSON value occupies exactly 16 bytes for
most 32/64-bit machines (excluding text string). By default it uses a fast
memory allocator, and the parser allocates memory compactly during parsing.

  * RapidJSON is Unicode-friendly. It supports UTF-8, UTF-16, UTF-32 (LE & BE),
and their detection, validation and transcoding internally. For example, you
can read a UTF-8 file and let RapidJSON transcode the JSON strings into UTF-16
in the DOM. It also supports surrogates and "\u0000" (null character).
EOF
