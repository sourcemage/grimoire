           SPELL=hob3l
         VERSION=0+snapshot-2024-06-23
             REF=25b80253871bd62ab03cf5ec47dd7494db1e3fd7
          SOURCE="$SPELL-$REF.tar.gz"
   SOURCE_URL[0]=https://github.com/moehriegitt/$SPELL/archive/$REF.tar.gz
     SOURCE_HASH=sha512:c7d28bbc4d467b22887b89a6a6bd1dba7ee00c40a23e051a54d89567dcc00dd616cfa350e0951a0119a9277039aede119b0caead986404d2a73c86653bf155f9
SOURCE_DIRECTORY="$BUILD_DIRECTORY/$SPELL-$REF"
        WEB_SITE="https://github.com/moehriegitt/hob3l"
      LICENSE[0]="GPL-3.0-only"
         ENTERED=20250101
        KEYWORDS=""
           SHORT="Fast Slicing of SCAD Files for 3D Printing"
cat << EOF
Hob3l is a command line tool for reading SCAD files and writing STL files
for 3D printing. The focus is on speed and robustness.

OpenSCAD can convert SCAD to STL, too, but it is very slow, because it first
produces a 3D object. And the CGAL library used by OpenSCAD is not very
robust: I often get spurious error messages due to unstable 3D arithmetics:
'object may not be a valid 2-manifold'.

Instead, Hob3l uses stable arithmetics to produce an STL file suitable for
3D printing. It first pre-slices the basic 3D objects from the SCAD file
into layers and then uses 2D operations on each layer. The 2D operations
are much faster than 3D operations, and arithmetically much simpler, and
thus easier to get stable.

Hob3l is very robust -- the 2D base library was fuzzed to get rid of numeric
instability problems. Hob3l uses integer arithmetics and a snap rounding
algorithm to stay within the input coordinate precision. It reads and writes
normal floating point numbers, and the float<->int conversions are exact
within float precision (the native STL binary number format). If necessary,
the precision can be scaled (by default, the unit is 1/8192mm).
EOF
